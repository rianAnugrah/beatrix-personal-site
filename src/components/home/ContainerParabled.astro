---
import { Image } from "astro:assets";

import scMobile from "../../assets/Container - Parabled-m.png"; // Make sure to add your image to this path
import scDesktop from "../../assets/home/container-desktop-parabled.png"; // Make sure to add your image to this path
import scTablet from "../../assets/Container - Parabled-t.png"; // Make sure to add your image to this path
import Heading from "../Heading.astro";
import Pile from "../Pile.astro";

const title = "Parabled";
const subtitle = `Web | UX Writing`
const desc1  = `First version of Savicore`
const desc2  = `Revamped the entire esports platform website to attract users and encourage them to register for our coaching plans.`
---

<section class="reveal-section w-full lg:w-[80rem] mb-[3rem] lg:mb-0 mx-auto lg:h-[30rem] flex flex-col lg:flex-row items-center px-0 lg:px-[7.5rem] ">
  <div class="w-full lg:w-[35.5rem] h-[20rem] lg:h-[30rem]">
    <Image
      src={scDesktop}
      alt="works-section"
      class="w-full h-full object-contain"
    />
  </div>
  </div>
  <div class="flex p-[1.5rem] lg:px-[2.375rem] flex-col   justify-center">
    <h2
        class={`text-left w-full text-[2rem] xl:text-[3rem] font-bold leading-[3rem] mb-4`}
        style="font-family: 'Playfair Display', serif;"
            >
                {title}
    </h2>
    <p   class={`text-left w-full text-xl mb-4`}
    style="font-family: 'Playfair Display', serif;">{subtitle}</p>
    <p class="italic w-full text-xl mb-4">
      {desc2}
  </p>
    <a href="/works/parabled" class="text-[#FF3C2A] text-xl font-semibold underline" style="font-family: 'Playfair Display', serif;">Show more</a>
  </div>
</section>



<style>
  /* Initial state: hidden with slight offset */
  .reveal-section {
    opacity: 0;
    transform: translateY(50px); /* Slide up effect */
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
  }

  /* Active state: visible and in position */
  .reveal-section.visible {
    opacity: 1;
    transform: translateY(0);
  }
</style>

<script>
  // Add this script to handle the scroll reveal
  document.addEventListener("DOMContentLoaded", () => {
    const sections = document.querySelectorAll(".reveal-section");

    const observer = new IntersectionObserver(
      (entries, observer) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add("visible");
            observer.unobserve(entry.target); // Stop observing once revealed
          }
        });
      },
      {
        threshold: 0.1, // Trigger when 10% of the section is visible
      }
    );

    sections.forEach((section) => {
      observer.observe(section);
    });
  });
</script>